DTD:
	Element => ELEMENT
	Empty element => <!ELEMENT <element-name> EMPTY>
	Any element => <!ELEMENT element-name ANY>

	Attribute
	<!ATTLIST element-name attribute-name1 attribute-type attribute-value>
	<!ATTLIST element-name attribute-name2 attribute-type attribute-value>	

	Attribute types:
	-------------------------------
	CDATA: the value of the attribute is character data
	(enum1|enum2): the value of the attribute is any one from the enumerated list
	ID: the value of the attribute is an unique id
	IDREF: the value of the attribute is ID of another element
	IDREFS: the value of the attribute is list of the other IDs of other elements
	NMTOKEN: the value of the attribute is a valid XML name
	NMTOKENS: the value of the attribute is a list of valid XML names
	NOTATION: the value of the attribute is the name of a notation
	ENTITY: the value of the attribute is an entity
	ENTITIES: the value of the attribute is a list of entities

	Attribute values:
	#REQUIRED: the attribute value is required
	#IMPLIED: the attibute value is optional
	#FIXED value: the attribute value is fixed (mention the value)


	<select>
		<option selected disabled>--select--</option>
		<option> Bangalore </option>
		<option> Chennai </option>
	</select>

	entity:
		built-in (&gt;. &lt; etc.)
		custom
			a. general entities
				syntax: <!ENTITY entity-name "entity-value">
				use : 	&entity-name;
			b. parameter entities
				syntax: <!ENTITY % entity-name "entity-value">
				use: %entity-name;

	XML namespaces:
		logical name containing several type definitions
		logical name which represents  case-sensitive internationalized resource identifier (IRI) reference (URL or URN)
		URL: Uniform Resource Locator
		URN: Uniform Resource Name

		employees => schema file

		http://oracle.com/employees => the schema file defining employees and its structure is present in the URL given

	XML Schema:
		alternative to DTD
		used to define the structure of XML document
		the xml document can be validated against XML schema
		xml schemas are stored in XSD file
		XSD: XML Schema Definition
		*.xsd extension
		is created using XML itself
		to define elements/types
			- Simple and Complex types
			- element and attribute declarations

		employees => name, id, salary
		name => first-name, middle-name, last-name
		first-name => data

		















	
